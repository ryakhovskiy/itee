--$$SCHEMA$$#MD_REPOSITORY#TABLE#0
create row table $$SCHEMA$$.MD_REPOSITORY
(
    NAME nvarchar(256) CS_STRING,
    TYPE char(1) CS_FIXEDSTRING,
    VERSION INT CS_INT
)

--$$SCHEMA$$#PROPERTIES#TABLE#1
create row table $$SCHEMA$$.PROPERTIES
(
    KEY NVARCHAR(100) CS_STRING,
    VALUE NVARCHAR(255) CS_STRING,
    PRIMARY KEY ("KEY")
)

--$$SCHEMA$$#REPORT_SETTINGS#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.REPORT_SETTINGS
(
    REP_ID NVARCHAR(32) CS_STRING,
	  KEY NVARCHAR(100) CS_STRING,
    VALUE NVARCHAR(100) CS_STRING
)

--$$SCHEMA$$#RT_SERVER#TABLE#0
CREATE ROW TABLE $$SCHEMA$$."RT_SERVER"
(
	ID INT CS_INT,
	INSTANCE_ID VARCHAR(3) CS_STRING,
	NAME VARCHAR(100) CS_STRING,
	TYPE VARCHAR CS_STRING,
	INTP_HOST VARCHAR(50) CS_STRING,
	PORT INT CS_INT,
	STATUS TINYINT CS_INT,
	HANA_HOST VARCHAR(50) CS_STRING,
	HANA_INSTANCE VARCHAR(2) CS_STRING,
	INTP_LICENSE_KEY VARCHAR(root4000) CS_STRING,
	HANA_USER NVARCHAR(100) CS_STRING,
	HANA_PASSWORD NVARCHAR(100) CS_STRING,
	LDETAILS NVARCHAR(512) CS_STRING,
	INTP_SIZE_MB INT CS_INT,
	PRIMARY KEY ("ID", "INSTANCE_ID")
)

--$$SCHEMA$$#RT_LIFECYCLE_JOBS#TABLE#1
CREATE ROW TABLE $$SCHEMA$$.RT_LIFECYCLE_JOBS
(
	PROJECT_ID NVARCHAR(30) CS_STRING,
	NAME NVARCHAR(128) CS_STRING NOT NULL,
	PROCEDURE NVARCHAR(256) CS_STRING NOT NULL,
	PERIOD_SECOND INT CS_INT,
	START_DATE LONGDATE CS_LONGDATE,
	END_DATE LONGDATE CS_LONGDATE,
	EXECUTORS INT CS_INT,
	IS_ACTIVE VARCHAR CS_STRING DEFAULT 'N'
)

--$$SCHEMA$$#RT_LIFECYCLE_LOG#TABLE#1
CREATE ROW TABLE $$SCHEMA$$.RT_LIFECYCLE_LOG
(
    UUID NVARCHAR(64) CS_STRING,
	PROJECT_ID NVARCHAR(30) CS_STRING,
	UPDATE_TS LONGDATE CS_LONGDATE NOT NULL,
	NAME NVARCHAR(128) CS_STRING NOT NULL,
	STATUS INT CS_INT NOT NULL,
	COMMENT NVARCHAR(2048) CS_STRING
)

--$$SCHEMA$$#RT_PROJECT_DEFINITIONS#TABLE#3
CREATE ROW TABLE $$SCHEMA$$.RT_PROJECT_DEFINITIONS
(
	PROJECT_ID NVARCHAR(30) CS_STRING,
	VERSION INT CS_INT,
	TYPE NVARCHAR(10) CS_STRING,
	APPLICATION NVARCHAR(30) CS_STRING,
	DESCRIPTION NVARCHAR(255) CS_STRING,
	CREATION_DATE LONGDATE CS_LONGDATE,
	CHANAGE_DATE LONGDATE CS_LONGDATE,
	ACTIVATION_DATE LONGDATE CS_LONGDATE,
	STATUS TINYINT CS_INT,
	TABLE_SCHEMA NVARCHAR(127) CS_STRING,
	PROC_SCHEMA NVARCHAR(127) CS_STRING,
	PARENT_VERSION INT CS_INT,
	CATEGORY_ID INT CS_INT,
	GROUP_ID INT CS_INT,
	GEN_OPTION INT CS_INT,
	PRIMARY KEY ( PROJECT_ID,VERSION )
)

--$$SCHEMA$$#RT_GROUPS#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_GROUPS
(
	GROUP_ID INT CS_INT,
	NAME NVARCHAR(512) CS_STRING,
	PRIMARY KEY ( GROUP_ID )
)

--$$SCHEMA$$#RT_ACTIVE_PROJECTS#TABLE#4
CREATE ROW TABLE $$SCHEMA$$.RT_ACTIVE_PROJECTS
(
	PROJECT_ID NVARCHAR(30) CS_STRING,
	VERSION INT CS_INT,
	STATUS TINYINT CS_INT,
	ACTION NVARCHAR(150) CS_STRING,
	SCHEDULER_TIME_BASE TIMESTAMP,
	STATUS_MESSAGE NVARCHAR (1024) CS_STRING,
	IS_PROJECT_INITIALIZED BOOLEAN,
	PRIMARY KEY ( PROJECT_ID,VERSION )
)

--$$SCHEMA$$#RT_PROJECT_KEYS#TABLE#3
CREATE ROW TABLE $$SCHEMA$$.RT_PROJECT_KEYS
(
	PROJECT_ID NVARCHAR(30)  CS_STRING,
	TABLE_NUMBER INT CS_INT,
	NUMBER INT CS_INT,
	VERSION INT CS_INT,
	KEY_NAME NVARCHAR(30)  CS_STRING,
	KEY_DATATYPE NVARCHAR(30)  CS_STRING,
	KEY_INITIAL CHAR(1) ,
	KEY_SUMMABLE CHAR(1) ,
	KEY_THRESHOLD SMALLINT CS_INT,
	KEY_DELTA CHAR(1) ,
	KEY_SEQUENTIAL CHAR(1) ,
	PRIMARY KEY ( PROJECT_ID, TABLE_NUMBER, NUMBER, VERSION )
)

--$$SCHEMA$$#RT_PROJECT_PROCEDURES#TABLE#2
CREATE ROW TABLE $$SCHEMA$$.RT_PROJECT_PROCEDURES
(
	PROJECT_ID NVARCHAR(30) CS_STRING,
	NUMBER INT CS_INT,
	TYPE NVARCHAR(10) CS_STRING,
	PROCEDURE_NAME NVARCHAR(512)  CS_STRING,
	VERSION INT CS_INT,
	CALLING_KIND NVARCHAR(30) CS_STRING,
	CONNECTION_ID NVARCHAR(50) CS_STRING,
	PRIMARY KEY ( PROJECT_ID, NUMBER, TYPE, VERSION )
)

--$$SCHEMA$$#RT_PROJECT_TABLES#TABLE#1
CREATE ROW TABLE $$SCHEMA$$.RT_PROJECT_TABLES
(
	PROJECT_ID NVARCHAR(30)  CS_STRING,
	NUMBER INT CS_INT,
	TABLE_NAME NVARCHAR(50)  CS_STRING,
	VERSION INT CS_INT,
	PRIMARY KEY ( PROJECT_ID, NUMBER, VERSION )
)

--$$SCHEMA$$#RT_STATEMENTS#TABLE#3
CREATE ROW TABLE $$SCHEMA$$.RT_STATEMENTS
(
	NAME NVARCHAR(100) CS_STRING,
	VERSION INT CS_INT,
	STATEMENT NCLOB CS_STRING,
	PROJECT_ID NVARCHAR(30) CS_STRING,
	OBJECT_TYPE NVARCHAR(100) CS_STRING,
	PRIMARY KEY ( NAME, VERSION )
)

--$$SCHEMA$$#RT_STATUS#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_STATUS
(
	TYPE NVARCHAR(10)  CS_STRING,
	APPLICATION NVARCHAR(30)  CS_STRING,
	ACTIVE NVARCHAR(30)  CS_STRING,
	PRIMARY KEY ( TYPE, APPLICATION )
)

--$$SCHEMA$$#RT_STATUS_DESC#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_STATUS_DESC
(
	ID INT CS_INT,
	NAME CHAR(1) CS_FIXEDSTRING,
	DESCRIPTION NVARCHAR(255) CS_STRING
)

--$$SCHEMA$$#RT_TYPES#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_TYPES
(
	TYPE NVARCHAR(10)  CS_STRING,
	ICON NVARCHAR(100)  CS_STRING,
	PRIMARY KEY ( TYPE )
)

--$$SCHEMA$$#RT_TYPESDESC#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_TYPESDESC
(
	LANG NVARCHAR  CS_STRING,
	TYPE NVARCHAR(10) CS_STRING,
	DESCRIPTION NVARCHAR(255) CS_STRING,
	PRIMARY KEY ( LANG, TYPE )
)

--$$SCHEMA$$#RT_RUN_LOG_HISTORY#TABLE#1
create column table $$SCHEMA$$.RT_RUN_LOG_HISTORY
(
    project_id nvarchar(63),
    type char(1) CS_FIXEDSTRING,
    UPD_TIMESTAMP LONGDATE CS_LONGDATE,
    uuid nvarchar(64),
    triggered LONGDATE CS_LONGDATE,
    started LONGDATE CS_LONGDATE,
    finished LONGDATE CS_LONGDATE,
    sla_millis bigint cs_fixed
)

--$$SCHEMA$$#RT_RR#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_RR
(
	REQUEST NVARCHAR(512) CS_STRING,
	RESPONSE NVARCHAR(512) CS_STRING,
	STATUS NVARCHAR(512) CS_STRING
)

--$$SCHEMA$$#RT_PARAMETERS#TABLE#1
CREATE ROW TABLE $$SCHEMA$$.RT_PARAMETERS
(
    PROJECT_ID NVARCHAR(63),
    VERSION INTEGER,
    TS TIMESTAMP,
    PARAMETERS NVARCHAR(4000),
    PRIMARY KEY (PROJECT_ID, VERSION, TS)
)

--$$SCHEMA$$#ERE_PARAMS#TABLE#1
CREATE ROW TABLE $$SCHEMA$$.ERE_PARAMS
(
    PROJECT_ID NVARCHAR(63),
    NAME NVARCHAR(255),
    ENABLED INTEGER,
    JSON NVARCHAR(4000),
    IT_OBJECT NVARCHAR(512),
    RT_OBJECT NVARCHAR(512),
    PRIMARY KEY (PROJECT_ID, NAME)
)

--$$SCHEMA$$#RT_ERE_INFO#TABLE#1
CREATE COLUMN TABLE $$SCHEMA$$.RT_ERE_INFO
(
    PROJECT_ID NVARCHAR(63),
    NAME NVARCHAR(255),
    MODE INTEGER
)

--$$SCHEMA$$#LANDSCAPE#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.LANDSCAPE
(
    DEV_NAME VARCHAR(100) CS_STRING,
    DEV_INTP_HOST VARCHAR(50) CS_STRING,
    DEV_INTP_PORT INT CS_INT,
    QA_NAME VARCHAR(100) CS_STRING,
    QA_INTP_HOST VARCHAR(50) CS_STRING,
    QA_INTP_PORT INT CS_INT,
    PROD_NAME VARCHAR(100) CS_STRING,
    PROD_INTP_HOST VARCHAR(50) CS_STRING,
    PROD_INTP_PORT INT CS_INT
)

--$$SCHEMA$$#USER_ACTION_LOG#TABLE#1
CREATE ROW TABLE "$$SCHEMA$$".USER_ACTION_LOG (
  ACTION_ID INT CS_INT,
	ACTION_TS LONGDATE CS_LONGDATE,
	ACTION_TYPE NVARCHAR(30) CS_STRING,
	ACTION_CONTENT NCLOB MEMORY THRESHOLD 1000 ,
	USER NVARCHAR(255) CS_STRING,
	PROJECT_ID NVARCHAR(63) CS_STRING,
	VERSION INT CS_INT,
	PRIMARY KEY ("ACTION_ID")
)

--$$SCHEMA$$#RT_CATEGORIES#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_CATEGORIES
(
    CATEGORY_ID INT CS_INT NOT NULL,
    PARENT_ID INT CS_INT,
    CATEGORY_NAME NVARCHAR(1023) CS_STRING,
    PRIMARY KEY ( CATEGORY_ID )
)

--$$SCHEMA$$#UI_CONTROLS#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.UI_CONTROLS
(
   ID BIGINT CS_FIXED NOT NULL,
    CONTROL_ID NVARCHAR(512) CS_STRING NOT NULL,
    VIEW_ID NVARCHAR(512) CS_STRING NOT NULL,
    FUNCTIONS NVARCHAR(512) CS_STRING,
    PRIMARY KEY (ID)
)

--$$SCHEMA$$#UI_DISABLED_CONTROLS#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.UI_DISABLED_CONTROLS
(
    ID BIGINT CS_FIXED NOT NULL,
    ROLE NVARCHAR(256) CS_STRING NOT NULL,
    SYSTEM NVARCHAR(8) CS_STRING NOT NULL,
    PRIMARY KEY (ID, ROLE, SYSTEM)
)

--$$SCHEMA$$#HOOKS#TABLE#1
CREATE ROW TABLE $$SCHEMA$$.HOOKS
(
  PROJECT_ID NVARCHAR(63),
  PROJECT_VERSION INT,
  NAME NVARCHAR (512),
	ENABLED VARCHAR (1),
	TYPE VARCHAR (32),
	PROC_SCHEMA NVARCHAR (512),
	PROC_NAME NVARCHAR (512),
	IS_ASYNC VARCHAR (1),
	EXECUTORS INTEGER
)

--$$SCHEMA$$#HOOKS_EXECUTION_LOG#TABLE#2
create row table $$SCHEMA$$.HOOKS_EXECUTION_LOG
(
	PROJECT_ID nvarchar(63),
	PROJECT_VERSION int,
	NAME NVARCHAR (512),
	TYPE VARCHAR (32),
	JOB_ID NVARCHAR(64),
	JOB_TS TIMESTAMP,
	ARGS NVARCHAR (1024),
	MESSAGE NVARCHAR(4000),
	MESSAGE_TS TIMESTAMP
)

--$$SCHEMA$$#INTP_LOG#TABLE#1
CREATE ROW TABLE $$SCHEMA$$.INTP_LOG
(
	TS TIMESTAMP,
	THREAD VARCHAR(127) CS_STRING,
	PRIO VARCHAR(15) CS_STRING,
	CLASS VARCHAR(511) CS_STRING,
	MESSAGE CLOB MEMORY THRESHOLD 1024
)

--$$SCHEMA$$#RT_SPECIAL_PROCEDURES#TABLE#0
CREATE ROW TABLE $$SCHEMA$$.RT_SPECIAL_PROCEDURES
(
    PROJECT_ID NVARCHAR(30),
    PROJECT_VERSION INT,
    TYPE CHAR(1),
    KEY_NUMBER INT,
    KEY_SPECIAL_VALUE NVARCHAR(1024),
    PROCEDURE_SCHEMA NVARCHAR(255),
    PROCEDURE_NAME NVARCHAR(255)
)

--$$SCHEMA$$#RT_PRECALCULATED_OBJECTS#TABLE#1
CREATE ROW TABLE "$$SCHEMA$$"."RT_PRECALCULATED_OBJECTS"
(
  PROJECT_ID NVARCHAR(30) CS_STRING,
  PROJECT_VERSION INT CS_INT,
	SCHEMA NVARCHAR(127) CS_STRING,
	NAME NVARCHAR(127) CS_STRING,
	PRIMARY KEY ( "PROJECT_ID", "PROJECT_VERSION", "SCHEMA", "NAME" )
)

--$$SCHEMA$$#RT_PROJECT_PRIORITY#TABLE#0
CREATE ROW TABLE $$SCHEMA$$."RT_PROJECT_PRIORITY"
(
	PROJECT_ID NVARCHAR(30) CS_STRING,
	PROJECT_VERSION INT CS_INT,
	WORKLOAD_PRIORITY NVARCHAR(100) CS_STRING,
	PRIMARY KEY(PROJECT_ID, PROJECT_VERSION)
)